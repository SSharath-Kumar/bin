#!/bin/bash

# Function to process files in a directory
process_directory() {
    local dir="$1"
    for file in "$dir"/*; do
        # Skip if file doesn't exist (to handle empty directories)
        [ -e "$file" ] || continue

        if [ -f "$file" ]; then
            # Check if the first line starts with #!
            if head -n 1 "$file" | grep -q '^#!'; then
                chmod +x "$file"
                echo "Added executable permission to: $file"
            fi
        elif [ -d "$file" ] && [ "$RECURSIVE" = true ]; then
            # Recursively process subdirectories if -r is enabled
            process_directory "$file"
        fi
    done
}

# Initialize variables
RECURSIVE=false

# Parse options
while getopts ":r" opt; do
    case $opt in
        r)
            RECURSIVE=true
            ;;
        *)
            echo "Usage: $0 [-r] <directory>"
            exit 1
            ;;
    esac
done

# Shift past the options
shift $((OPTIND - 1))

# Ensure exactly one argument remains (the directory)
if [ "$#" -ne 1 ]; then
    echo "Usage: $0 [-r] <directory>"
    echo "Adds the executable permission to scripts in the specified directory"
    exit 1
fi

# Assign the argument to a variable
TARGET_DIR="$1"

# Ensure the argument is a directory
if [ ! -d "$TARGET_DIR" ]; then
    echo "Error: $TARGET_DIR is not a directory."
    exit 1
fi

# Process the directory
process_directory "$TARGET_DIR"
